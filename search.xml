<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[前端学习笔记系列-1.浮动清除]]></title>
      <url>http://www.wusijie.tk/2016/07/28/float-clean/</url>
      <content type="html"><![CDATA[<h3 id="清除浮动，什么时候需要清除浮动，清除浮动都有哪些方法？"><a href="#清除浮动，什么时候需要清除浮动，清除浮动都有哪些方法？" class="headerlink" title="清除浮动，什么时候需要清除浮动，清除浮动都有哪些方法？"></a>清除浮动，什么时候需要清除浮动，清除浮动都有哪些方法？</h3><blockquote>
<p>因为浮动会使当前标签产生向上浮的效果，同时会影响到前后标签、父级标签的位置及 width height 属性。<br>而且同样的代码，在各种浏览器中显示效果也有可能不相同，这样让清除浮动更难了。</p>
</blockquote>
<a id="more"></a>
<h3 id="推荐的方法"><a href="#推荐的方法" class="headerlink" title="推荐的方法"></a>推荐的方法</h3><h4 id="方法1：结尾处加空div标签clear-both"><a href="#方法1：结尾处加空div标签clear-both" class="headerlink" title="方法1：结尾处加空div标签clear:both"></a>方法1：结尾处加空div标签clear:both</h4><p>原理：添加一个空div，利用css提高的clear:both清除浮动，让父级div能自动获取到高度<br>优点：简单，代码少，浏览器支持好，不容易出现怪问题<br>缺点：不少初学者不理解原理；如果页面浮动布局多，就要增加很多空div，让人感觉很不爽<br>建议：不推荐使用，但此方法是以前主要使用的一种清除浮动方法<br>评分：★★★☆☆ </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;style type=<span class="string">"text/css"</span>&gt; </div><div class="line">   .div1&#123;<span class="attribute">background</span>:<span class="number">#000080</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid red&#125;</div><div class="line">   .div2&#123;<span class="attribute">background</span>:<span class="number">#800080</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid red;<span class="attribute">height</span>:<span class="number">100px</span>;<span class="attribute">margin-top</span>:<span class="number">10px</span>&#125;</div><div class="line">   </div><div class="line">   .<span class="attribute">left</span>&#123;float:left;<span class="attribute">width</span>:<span class="number">20%</span>;<span class="attribute">height</span>:<span class="number">200px</span>;<span class="attribute">background</span>:<span class="number">#DDD</span>&#125;</div><div class="line">   .<span class="attribute">right</span>&#123;float:right;<span class="attribute">width</span>:<span class="number">30%</span>;<span class="attribute">height</span>:<span class="number">80px</span>;<span class="attribute">background</span>:<span class="number">#DDD</span>&#125;</div><div class="line">   </div><div class="line">   <span class="comment">/*清除浮动代码*/</span></div><div class="line">   .clearfloat&#123;<span class="attribute">clear</span>:both&#125;</div><div class="line">&lt;/style&gt; </div><div class="line">    &lt;<span class="selector-tag">div</span> class=<span class="string">"div1"</span>&gt; </div><div class="line">    &lt;<span class="selector-tag">div</span> class=<span class="string">"left"</span>&gt;Left&lt;/div&gt; </div><div class="line">    &lt;<span class="selector-tag">div</span> class=<span class="string">"right"</span>&gt;Right&lt;/div&gt;</div><div class="line">    &lt;<span class="selector-tag">div</span> class=<span class="string">"clearfloat"</span>&gt;&lt;/div&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line">    &lt;<span class="selector-tag">div</span> class=<span class="string">"div2"</span>&gt;</div><div class="line">       div2</div><div class="line">    &lt;/div&gt;</div></pre></td></tr></table></figure>
<h4 id="方法2：父级div定义伪类-after和zoom"><a href="#方法2：父级div定义伪类-after和zoom" class="headerlink" title="方法2：父级div定义伪类:after和zoom"></a>方法2：父级div定义伪类:after和zoom</h4><p>原理：IE8以上和非IE浏览器才支持:after，原理和方法2有点类似，zoom(IE转有属性)可解决ie6,ie7浮动问题<br>优点：浏览器支持好，不容易出现怪问题（目前：大型网站都有使用，如：腾迅，网易，新浪等等）<br>缺点：代码多，不少初学者不理解原理，要两句代码结合使用，才能让主流浏览器都支持<br>建议：推荐使用，建议定义公共类，以减少CSS代码<br>评分：★★★★☆ </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;style type=<span class="string">"text/css"</span>&gt; </div><div class="line">   .div1&#123;<span class="attribute">background</span>:<span class="number">#000080</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid red;&#125;</div><div class="line">   .div2&#123;<span class="attribute">background</span>:<span class="number">#800080</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid red;<span class="attribute">height</span>:<span class="number">100px</span>;<span class="attribute">margin-top</span>:<span class="number">10px</span>&#125;</div><div class="line">   </div><div class="line">   .<span class="attribute">left</span>&#123;float:left;<span class="attribute">width</span>:<span class="number">20%</span>;<span class="attribute">height</span>:<span class="number">200px</span>;<span class="attribute">background</span>:<span class="number">#DDD</span>&#125;</div><div class="line">   .<span class="attribute">right</span>&#123;float:right;<span class="attribute">width</span>:<span class="number">30%</span>;<span class="attribute">height</span>:<span class="number">80px</span>;<span class="attribute">background</span>:<span class="number">#DDD</span>&#125;</div><div class="line">   </div><div class="line">   <span class="comment">/*清除浮动代码*/</span></div><div class="line">   <span class="selector-class">.clearfloat</span>:after&#123;<span class="attribute">display</span>:block;<span class="attribute">clear</span>:both;<span class="attribute">content</span>:<span class="string">""</span>;<span class="attribute">visibility</span>:hidden;<span class="attribute">height</span>:<span class="number">0</span>&#125;</div><div class="line">   .clearfloat&#123;zoom:<span class="number">1</span>&#125;</div><div class="line">   &lt;/style&gt; </div><div class="line">&lt;<span class="selector-tag">div</span> class=<span class="string">"div1 clearfloat"</span>&gt; </div><div class="line">&lt;<span class="selector-tag">div</span> class=<span class="string">"left"</span>&gt;Left&lt;/div&gt; </div><div class="line">&lt;<span class="selector-tag">div</span> class=<span class="string">"right"</span>&gt;Right&lt;/div&gt; </div><div class="line">&lt;/div&gt;</div><div class="line">&lt;<span class="selector-tag">div</span> class=<span class="string">"div2"</span>&gt;</div><div class="line">   div2</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
<h4 id="方法3：父级div定义overflow-hidden"><a href="#方法3：父级div定义overflow-hidden" class="headerlink" title="方法3：父级div定义overflow:hidden"></a>方法3：父级div定义overflow:hidden</h4><p>原理：必须定义width或zoom:1，同时不能定义height，使用overflow:hidden时，浏览器会自动检查浮动区域的高度<br>优点：简单，代码少，浏览器支持好<br>缺点：不能和position配合使用，因为超出的尺寸的会被隐藏<br>建议：只推荐没有使用position或对overflow:hidden理解比较深的朋友使用<br>评分：★★★☆☆ </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;style type=<span class="string">"text/css"</span>&gt; </div><div class="line">   .div1&#123;<span class="attribute">background</span>:<span class="number">#000080</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid red;<span class="comment">/*解决代码*/</span><span class="attribute">width</span>:<span class="number">98%</span>;<span class="attribute">overflow</span>:hidden&#125;</div><div class="line">   .div2&#123;<span class="attribute">background</span>:<span class="number">#800080</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid red;<span class="attribute">height</span>:<span class="number">100px</span>;<span class="attribute">margin-top</span>:<span class="number">10px</span>;<span class="attribute">width</span>:<span class="number">98%</span>&#125;</div><div class="line">   </div><div class="line">   .<span class="attribute">left</span>&#123;float:left;<span class="attribute">width</span>:<span class="number">20%</span>;<span class="attribute">height</span>:<span class="number">200px</span>;<span class="attribute">background</span>:<span class="number">#DDD</span>&#125;</div><div class="line">   .<span class="attribute">right</span>&#123;float:right;<span class="attribute">width</span>:<span class="number">30%</span>;<span class="attribute">height</span>:<span class="number">80px</span>;<span class="attribute">background</span>:<span class="number">#DDD</span>&#125;</div><div class="line">   &lt;/style&gt; </div><div class="line">&lt;<span class="selector-tag">div</span> class=<span class="string">"div1"</span>&gt; </div><div class="line">&lt;<span class="selector-tag">div</span> class=<span class="string">"left"</span>&gt;Left&lt;/div&gt; </div><div class="line">&lt;<span class="selector-tag">div</span> class=<span class="string">"right"</span>&gt;Right&lt;/div&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;<span class="selector-tag">div</span> class=<span class="string">"div2"</span>&gt;</div><div class="line">   div2</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Sip协议介绍]]></title>
      <url>http://www.wusijie.tk/2016/07/27/sip/</url>
      <content type="html"><![CDATA[<h2 id="什么是SIP"><a href="#什么是SIP" class="headerlink" title="什么是SIP?"></a>什么是SIP?</h2><blockquote>
<p>SIP is an application-layer control protocol that can establish, modify, and terminate multimedia sessions (conferences) such as Internet telephony calls.<br><a id="more"></a></p>
<h2 id="SIP-协议的特点"><a href="#SIP-协议的特点" class="headerlink" title="SIP 协议的特点"></a>SIP 协议的特点</h2></blockquote>
<ul>
<li>文本协议：易于实现，可读性强，结构灵活，易于扩展。</li>
<li>中性的底层传输协议：同时支持TCP和UDP，推荐使用UDP传输。</li>
<li>呼叫和媒体控制信息同时传送：利用SDP协议(Session Description Protocol)传送媒体信息。</li>
</ul>
<h2 id="SIP-分布式网络结构"><a href="#SIP-分布式网络结构" class="headerlink" title="SIP 分布式网络结构"></a>SIP 分布式网络结构</h2><p><img src="http://7xwui9.com1.z0.glb.clouddn.com/link-20160727153422.png" alt="SIP分布式网络结构图" title="SIP分布式网络结构图"></p>
<h2 id="SIP-消息"><a href="#SIP-消息" class="headerlink" title="SIP 消息"></a>SIP 消息</h2><h3 id="1-SIP消息格式"><a href="#1-SIP消息格式" class="headerlink" title="1.SIP消息格式"></a>1.SIP消息格式</h3><pre><code>SIP消息＝起始行
    *消息头部（1个或多个）
    CRLF（空行）
    [消息体]
</code></pre><h3 id="2-SIP-消息头格式"><a href="#2-SIP-消息头格式" class="headerlink" title="2.SIP 消息头格式"></a>2.SIP 消息头格式</h3><p>SIP 的格式和语法与==HTTP==基本相同.<br>一个SIP 消息头的<code>例子</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">-----------------------------------------------------------------</div><div class="line">                        SIP Header</div><div class="line">-----------------------------------------------------------------</div><div class="line">INVITE sip:5120@192.168.36.180 SIP/2.0</div><div class="line">Via: SIP/2.0/UDP 192.168.6.21:5060</div><div class="line">From: sip:5121@192.168.6.21</div><div class="line">To: &lt;sip:5120@192.168.36.180&gt;</div><div class="line">Call-ID: c2943000-e0563-2a1ce-2e323931@192.168.6.21</div><div class="line">CSeq: 100 INVITE</div><div class="line">Expires: 180</div><div class="line">User-Agent: Cisco IP Phone/ Rev. 1/ SIP enabled</div><div class="line">Accept: application/sdp</div><div class="line">Contact: sip:5121@192.168.6.21:5060</div><div class="line">Content-Type: application/sdp</div></pre></td></tr></table></figure></p>
<h3 id="3-SIP-主要头部字段"><a href="#3-SIP-主要头部字段" class="headerlink" title="3.SIP 主要头部字段"></a>3.SIP 主要头部字段</h3><ul>
<li>From：指示请求的发起者<br>  From：显示名<sip-url>；tag＝xxxx</sip-url></li>
<li>To：指明请求的接收者<br>  To：显示名<sip-url>；tag＝xxxx</sip-url></li>
<li>CALL-ID：用以标识一个特定的邀请或标识某一客户的所有登记<br>  Call-ID：本地标识@主机</li>
<li>Cseq：命令序号，相同呼叫中的不同请求消息的cseq递加1，重发请求的序号不变，ACK和CANCEL请求的序号与对应的INVITE相同<br>Cseq:100 INVITE</li>
<li>Via：Via字段用于指示请求经历的路径，确保响应和请求消息选择相同的路径<br>Via：发送协议发送方；隐藏参数；生存期参数；多播地址参数；接收方标记；分支参数</li>
<li>Contact：用于重定向，指出以后和用户通信的地址<br>Contact：地址；q参数；动作参数；失效参数；扩展属性 </li>
</ul>
<h2 id="建立通信的过程"><a href="#建立通信的过程" class="headerlink" title="建立通信的过程"></a>建立通信的过程</h2><p>使用SIP建立通信通常需要5个步骤:</p>
<ol>
<li>用户代理进行注册、初始化和定位.</li>
<li>决定在呼叫中要使用的媒体类型.</li>
<li>建立呼叫.</li>
<li>改变呼叫，例如呼叫转移，SDP重新协商.</li>
<li>终结呼叫.</li>
</ol>
<h2 id="简单的SIP呼叫建立和拆除过程"><a href="#简单的SIP呼叫建立和拆除过程" class="headerlink" title="简单的SIP呼叫建立和拆除过程"></a>简单的SIP呼叫建立和拆除过程</h2><p><img src="http://7xwui9.com1.z0.glb.clouddn.com/link-20160727160747.png" alt="过程示意图" title="过程示意图"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[作为一个前端，可以如何机智地弄坏一台电脑？]]></title>
      <url>http://www.wusijie.tk/2016/07/26/hello-world/</url>
      <content type="html"><![CDATA[<p>有人说，前端的界限就在浏览器那儿。<br>无论你触发了多少bug，最多导致浏览器崩溃，对系统影响不到哪去。<br>这就像二次元各种炫酷的毁灭世界，都不会导致三次元的世界末日。<br>然而，作为一个前端，我发现是有方式打开次元大门的…<br>这个实验脑洞较大，动机无聊，但某种意义上反映了一些安全问题。<br>想象一下，有天你在家里上网，吃着火锅还唱着歌，点开一个链接，电脑突然就蓝屏了！想想还真有点小激动。<br><a id="more"></a></p>
<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>故事得从localStorage说起。<br>html5的本地存储，相信大家都不陌生。将数据以二进制文件形式存储到本地，在当前应用得非常广泛。<br>windows下的chrome，localStorage存储于C:\Users\xxx\AppData\Local\Google\Chrome\User Data\Default\Local Storage文件夹中。但如果任由网页无限写文件，对用户硬盘的伤害可想而知，因而浏览器对其做了大小限制。<br>对于一个域名+端口，PC侧的上限是5M-10M之间，移动侧是则不大于2.5M。<br>那么问题就变成：这样的限制足够保护用户硬盘了吗？</p>
<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
